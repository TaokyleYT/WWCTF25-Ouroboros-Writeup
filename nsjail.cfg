name: "ctf-ouroboros-wrapper"
description: "Outer NSJail config wrapping the Python runner for the Ouroboros challenge"

mode: ONCE

# Fully disable unwanted namespaces and /proc
disable_proc: true
disable_clone_newnet: true
disable_clone_newuts: true
disable_clone_newipc: true
disable_clone_newpid: true

# Map the inside root user (UID 0) to an unprivileged host user (UID 1000)
uidmap {
  inside_id: 0
  host_id: 1000
  count: 1
}
gidmap {
  inside_id: 0
  host_id: 1000
  count: 1
}
user: "0"
group: "0"

# Tight resource limits for the Python process
rlimit_as_type: HARD
rlimit_as: 67108864        # 64 MiB of address space
rlimit_cpu_type: HARD
rlimit_cpu: 1              # 1 second CPU time
rlimit_fsize_type: HARD
rlimit_fsize: 1048576      # 1 MiB max file size
rlimit_nofile_type: HARD
rlimit_nofile: 3           # stdin, stdout, stderr only
rlimit_nproc_type: HARD
rlimit_nproc: 10           # allow up to 10 internal threads/processes

# Restrict syscalls to the essentials (Python needs openat, stat, etc.)
seccomp_string: "ALLOW { read, write, close, fstat, stat, lstat, openat, execve, exit_group } DEFAULT KILL_PROCESS"

# Start in the hostâ€™s home directory
cwd: "/home/user"

# Mounts needed for Python & your script
mount: [
  {
    src: "/usr"
    dst: "/usr"
    is_bind: true
    readonly: true
  },
  {
    src: "/lib"
    dst: "/lib"
    is_bind: true
    readonly: true
  },
  {
    src: "/lib64"
    dst: "/lib64"
    is_bind: true
    readonly: true
  },
  {
    src: "/home/user"
    dst: "/home/user"
    is_bind: true
    readonly: true
  },
  {
    dst: "/tmp"
    fstype: "tmpfs"
    rw: true
  },
  {
    src: "/dev/null"
    dst: "/dev/null"
    is_bind: true
    readonly: true
  },
  {
    src: "/dev/random"
    dst: "/dev/random"
    is_bind: true
    readonly: true
  },
  {
    src: "/dev/urandom"
    dst: "/dev/urandom"
    is_bind: true
    readonly: true
  }
]

args: [ "/usr/bin/python3", "/app/chall.py" ]
